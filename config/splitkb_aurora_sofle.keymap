/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "keys/60.h"
#include "keys/base.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#define ZMK_MOUSE_SCRL_VAL_ENCODER 140    // default: 10

#define SCRL_UP_ENCODER MOVE_Y(ZMK_MOUSE_SCRL_VAL_ENCODER)
#define SCRL_DOWN_ENCODER MOVE_Y(-ZMK_MOUSE_SCRL_VAL_ENCODER)
#define SCRL_LEFT_ENCODER MOVE_X(-ZMK_MOUSE_SCRL_VAL_ENCODER)
#define SCRL_RIGHT_ENCODER MOVE_X(ZMK_MOUSE_SCRL_VAL_ENCODER)

#include <dt-bindings/zmk/pointing.h>

/* * Keymap for the Aurora Sofle keyboard.
 *
 * This keymap is designed to be used with the Aurora Sofle keyboard
 * and includes various behaviors and configurations for the keys.
 *
 * It includes:
 * - Layer-tap configurations
 * - Homerow mods
 * - RGB controls
 * - Media controls
 * - Bluetooth controls
 */
// &sensors {
//     left_config {
//        triggers-per-rotation = <18>;
//     };
//
//     right_config {
//        triggers-per-rotation = <24>;
//     };
// };

&mt { tapping-term-ms = <240>; };

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

&msc {
  acceleration-exponent = <1>;      // 0
  time-to-max-speed-ms = <40>;      // 500
  delay-ms = <0>;                   // 10
};

/ {
    behaviors {
        // Positional Homerow mods
        // Homerow mods that prevent accidental activations when rolling keys,
        // such as when typing `st` or `ne` on colemak-dh layouts or `as` on
        // qwerty.
        //
        // Works by only allowing a mod to activate within tapping-term if
        // it's on the opposite side of the keyboard or on the same side thumb
        // keys.
        // Further optimization using urob's timerless homerow mods method:
        // https://github.com/urob/zmk-config#timeless-homerow-mods

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;        // repeat on tap-into-hold
            // global-quick-tap-ms = <150>;         // requires PR #1387

            global-quick-tap;
            hold-trigger-key-positions = <KEYS_R KEYS_T>;
            hold-trigger-on-release;       // requires PR #1423
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <280>;

            // global-quick-tap-ms = <150>;         // requires PR #1387

            quick_tap_ms = <175>;
            global-quick-tap;
            hold-trigger-key-positions = <KEYS_L KEYS_T>;
            hold-trigger-on-release;       // requires PR #1423
        };

        /*
      * Non-Positional Homerow Mods
      * Used for &mm_grescm_gui behavior on left hand.
      *
      * Usage: &tm LSHFT T
      * Tap: T
      * Tap-Tap-Hold: Repeat T
      * Hold: LSHIFT
      */

        tm: thumb_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_MODS";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <280>;
            quick_tap_ms = <175>;
            global-quick-tap;
            retro-tap; // use tap when key is used without another key
        };

        lock_screen: lock_screen {
            compatible = "zmk,behavior-tap-dance";
            label = "LOCK_SCREEN";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(Q))>, <&kp LG(LC(LS(Q)))>;
        };

        rgb_brightness: rgb_brightness {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_BRIGHTNESS";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRD>, <&rgb_ug RGB_BRI>;
        };

        rgb_hue: rgb_hue {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_HUE";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };

        rgb_saturation: rgb_saturation {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_SATURATION";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAD>, <&rgb_ug RGB_SAI>;
        };
        
        mouse_scroll: mouse_scroll {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "MOUSE_SCROLL";
            #sensor-binding-cells = <2>;
            tap-ms = <20>;
            bindings = <&msc>, <&msc>;
        };
    
    };

    macros {
        tmux_split_vertical: tmux_split_vertical {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp PIPE>;
            label = "TMUX_SPLIT_VERTICAL";
        };

        tmux_split_horizontal: tmux_split_horizontal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp MINUS>;
            label = "TMUX_SPLIT_HORIZONTAL";
        };

        tmux_previous_tab: tmux_previous_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp P>;
            label = "TMUX_PREVIOUS_TAB";
        };

        tmux_next_tab: tmux_next_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp N>;
            label = "TMUX_NEXT_TAB";
        };

        tmux_sessions: tmux_sessions {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp S>;
            label = "TMUX_SESSIONS";
        };

        tmux_jump: tmux_jump {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp J>;
            label = "TMUX_JUMP";
        };

        tmux_focus: tmux_focus {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp Z>;
            label = "TMUX_FOCUS";
        };

        tmux_new_tab: tmux_new_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp C>;
            label = "TMUX_NEW_TAB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "BASE";

            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |

            bindings = <
&kp ESC         &kp N1         &kp N2             &kp N3               &kp N4                    &kp N5                                      &kp N6   &kp N7             &kp N8              &kp N9        &kp N0           &kp MINUS
&kp EQUAL       &kp Q          &kp W              &hml LEFT_BRACKET E  &hml RIGHT_BRACKET R      &kp T                                       &kp Y    &hmr LEFT_BRACE U  &hmr RIGHT_BRACE I  &kp O         &kp P            &kp BACKSLASH
&lt 3 LC(A)     &hml LSHIFT A  &hml LCTRL S       &hml LALT D          &hml LCMD F               &kp G                                       &kp H    &hmr RCMD J        &hmr RALT K         &hmr RCTRL L  &hmr RSHFT SEMI  &kp SQT
&kp LEFT_ARROW  &hml LG(Z) Z   &hml LG(X) X       &hml LG(C) C         &hml LG(V) V              &kp B          &kp C_MUTE     &lock_screen  &kp N    &kp M              &kp COMMA           &kp DOT       &kp FSLH         &kp RIGHT_ARROW
                               &kp LS(LC(LA(E)))  &rgb_ug RGB_TOG      &hml LG(LS(C)) LG(SPACE)  &kp BACKSPACE  &lt 2 SPACE    &lt 1 ENTER   &kp TAB  &kp UP_ARROW       &kp DOWN_ARROW      &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &mouse_scroll SCRL_UP_ENCODER SCRL_DOWN_ENCODER>;
        };

        symbols {
            display-name = "SYMBOLS";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |       |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F1     &kp F2     &kp F3     &kp F4       &kp F5    &kp F6                                &kp F7     &kp F8    &kp F9           &kp F10    &kp F11   &kp F12
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                                &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &none
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                             &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &rgb_ug RGB_TOG    &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                      &trans     &trans       &trans    &trans     &trans             &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&rgb_saturation &rgb_hue>;
        };

        actions {
            display-name = "ACTIONS";

            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   | USB O | BLE O |                | PGUP | HOME |   ^   | END  |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS  |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |       |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |       |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                         &ext_power EP_TOG  &ext_power EP_OFF  &ext_power EP_ON  &trans     &trans   &trans
&trans       &kp INS       &kp PSCRN     &kp K_CMENU   &out OUT_USB  &out OUT_BLE                                         &kp PG_UP          &kp HOME           &kp UP            &kp END    &trans   &trans
&trans       &kp LALT      &kp LCTRL     &kp LSHFT     &kp LCMD      &kp CLCK                                             &kp PG_DN          &kp LEFT           &kp DOWN          &kp RIGHT  &kp DEL  &kp BSPC
&bootloader  &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &rgb_ug RGB_HUD  &rgb_ug RGB_TOG    &rgb_ug RGB_EFF  &rgb_ug RGB_HUI    &trans             &trans            &trans     &trans   &bootloader
                           &trans        &trans        &trans        &rgb_ug RGB_SPD  &trans             &trans           &rgb_ug RGB_SPI    &trans             &trans            &trans
            >;

            sensor-bindings = <&rgb_brightness>, <&rgb_saturation>;
        };

        tmux {
            bindings = <
&none  &none  &none  &none          &none        &none                  &none               &none                 &none                   &none           &none  &none
&none  &none  &none  &none          &none        &none                  &none               &tmux_split_vertical  &tmux_split_horizontal  &tmux_new_tab   &none  &none
&none  &none  &none  &kp LC(SPACE)  &tmux_focus  &none                  &tmux_previous_tab  &tmux_jump            &tmux_sessions          &tmux_next_tab  &none  &none
&none  &none  &none  &none          &none        &none  &none    &none  &none               &none                 &none                   &none           &none  &none
              &none  &none          &none        &none  &none    &none  &none               &none                 &none                   &none
            >;

            label = "TMUX";
        };

        fun {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;

            label = "FUN";
        };
    };
};
