/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <6>;

    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};

&sensors {
    left_config {
        triggers-per-rotation = <18>;
    };

    right_config {
        triggers-per-rotation = <24>;
    };
};

/ {
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };

        tilde_caps: tilde_caps {
            compatible = "zmk,behavior-mod-morph";
            label = "TILDE_CAPS";
            #binding-cells = <0>;
            bindings = <&kp TILDE>, <&caps_word>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rgb_brightness: rgb_brightness {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_BRIGHTNESS";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRD>, <&rgb_ug RGB_BRI>;
        };

        rgb_hue: rgb_hue {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_HUE";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };

        rgb_saturation: rgb_saturation {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_SATURATION";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAD>, <&rgb_ug RGB_SAI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               |CTRL | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   | RALT |

            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3           &kp N4    &kp N5                         &kp N6  &kp N7    &kp N8     &kp N9    &kp N0    &kp GRAVE
&kp TAB    &kp Q   &kp W     &kp E            &kp R     &kp T                          &kp Y   &kp U     &kp I      &kp O     &kp P     &kp MINUS
&kp LCTRL  &kp A   &kp S     &kp D            &kp F     &kp G                          &kp H   &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C            &kp V     &kp B   &kp LBKT     &kp RBKT  &kp N   &kp M     &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                   &kp LGUI  &rgb_ug RGB_TOG  &kp LALT  &mo 1   &kp SPACE    &kp RET   &mo 2   &kp BSPC  &kp RGUI   &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |       |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&kp F1     &kp F2     &kp F3     &kp F4       &kp F5    &kp F6                       &kp F7     &kp F8    &kp F9           &kp F10    &kp F11   &kp F12
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &none
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                      &trans     &trans       &trans    &trans     &trans    &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&rgb_saturation &rgb_hue>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   | USB O | BLE O |                | PGUP | HOME |   ^   | END  |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS  |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |       |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |       |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                    &ext_power EP_TOG  &ext_power EP_OFF  &ext_power EP_ON  &trans     &trans   &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &out OUT_USB     &out OUT_BLE                    &kp PG_UP          &kp HOME           &kp UP            &kp END    &trans   &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &rgb_ug RGB_EFF  &kp CLCK                        &kp PG_DN          &kp LEFT           &kp DOWN          &kp RIGHT  &kp DEL  &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE      &trans        &trans    &trans  &trans             &trans             &trans            &trans     &trans   &trans
                          &trans        &trans        &trans           &trans        &trans    &trans  &trans             &trans             &trans            &trans
            >;

            sensor-bindings = <&rgb_brightness &inc_dec_kp PG_UP PG_DN>;
        };

        adjust_layer {
            // ---------------------------------------------------------------------------------------------------------
            // |       |     |     |             |      |      |                   |     |     |     |     |     |     |
            // |       |     |     |             |      |      |                   |     |     |     |     |     |     |
            // |       |     | Prev | Play/Pause | Next |      |                   |     |     |     |     |     |     |
            // |       |     |   ß |      ä      |  ö   |  ü   |        |  |       |     |     |     |     |     |     |
            //               |     |             |      |      |        |  |       |     |     |     |     |

            bindings = <
&none   &none  &none       &none      &none       &none                        &rgb_ug RGB_EFF  &none   &none   &none   &none  &trans
&none   &none  &none       &none      &none       &none                        &none            &none   &none   &none   &none  &trans
&trans  &none  &kp C_PREV  &kp C_PP   &kp C_NEXT  &none                        &none            &none   &none   &none   &none  &none
&trans  &none  &kp RA(S)   &kp RA(Q)  &kp RA(P)   &kp RA(Y)  &trans    &trans  &none            &none   &none   &none   &none  &trans
               &trans      &trans     &trans      &trans     &trans    &trans  &trans           &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
